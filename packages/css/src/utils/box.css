@layer utils {
  /* Requires `box-` to contain `square`, `rounded`, or `double` in order to work */
  [box-~="square"],
  [box-~="rounded"],
  [box-~="double"] {
    position: relative;
    isolation: isolate;

    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      width: calc(100% - 1ch - 2px);
      height: calc(100% - 1lh - 2px);
      border: solid 2px var(--box-border, var(--foreground));
      z-index: -1;
    }

    /* Apply border radius to the inner and outer (if present) border */
    &[box-~="rounded"] {
      &::before {
        border-radius: var(--rounded-box-radius);
      }

      &::after {
        border-radius: calc(var(--rounded-box-radius) + 2px);
      }
    }

    /* Adds the second border to the element */
    &[box-~="double"] {
      &::before {
        border-width: 1px;
      }

      &::after {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        translate: -50% -50%;
        width: calc(100% - 1ch + 2px);
        height: calc(100% - 1lh + 2px);
        border: solid 1px var(--box-border, var(--foreground));
        z-index: -1;
      }
    }

    /* Containment Variants */
    &[box-~="contain"] {
      padding: 1lh 1ch;
    }

    &[box-~="contain:\!top"] {
      padding-left: 1ch;
      padding-right: 1ch;
      padding-bottom: 1lh;
    }

    &[box-~="contain:\!bottom"] {
      padding-top: 1lh;
      padding-left: 1ch;
      padding-right: 1ch;
    }

    &[box-~="contain:x"] {
      padding-left: 1ch;
      padding-right: 1ch;
    }

    &[box-~="contain:y"] {
      padding-top: 1lh;
      padding-bottom: 1lh;
    }

    &[box-~="contain:top"] {
      padding-top: 1lh;
    }

    &[box-~="contain:bottom"] {
      padding-bottom: 1lh;
    }

    &[box-~="contain:left"] {
      padding-left: 1ch;
    }

    &[box-~="contain:right"] {
      padding-right: 1ch;
    }
  }
}
