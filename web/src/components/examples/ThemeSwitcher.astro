---
const themes = ['catppuccin', 'dark', 'light', 'nord'];
---

<div flex-="row">
  <div
    flex-="col"
    box-="square contain:!top"
    style="--box-border-color: var(--background2)"
  >
    <div><span is-="badge" variant-="background0">Theme</span></div>
    <div flex-="row" id="theme-buttons" space-="px:1">
      {
        themes.map((theme, i) => (
          <button
            data-index={i}
            variant-={i === 0 ? "background2" : "background1"}
            size-="small"
          >
            {`[${theme[0]}]${theme.slice(1)}`}
          </button>
        ))
      }
    </div>
  </div>
</div>

<style>
  #theme-tabs {
    a {
      display: inline-flex;
      text-decoration: none;
      color: var(--foreground0);

      &.active {
        --badge-color: var(--background2);
      }
    }
  }
</style>

<script>
  import { isUserTyping } from "@/utils/vim";

  let themes = ["catppuccin", "dark", "light", "nord"];

  const themeButtons = document.querySelectorAll("#theme-buttons button");

  themeButtons.forEach((button, index) => {
    button.addEventListener("click", () => {
      document.querySelector("html")!.className = themes[index];
      themeButtons.forEach((button) =>
        button.setAttribute("variant-", "background1"),
      );
      button.setAttribute("variant-", "background2");
    });
  });

  window.addEventListener("keydown", (e) => {
    if (isUserTyping()) return;

    const foundTheme = themes.findIndex((theme) => theme[0] === e.key);
    if (foundTheme !== -1) {
      document.querySelector("html")!.className = themes[foundTheme];
      themeButtons.forEach((button, i) =>
        button.setAttribute(
          "variant-",
          i === foundTheme ? "background2" : "background1",
        ),
      );
    }
  });
</script>
